
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        # 监听的宽口和host
        listen       3001;
        server_name  127.0.0.1;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            # 指定网页的目录为Nginx文件夹的指定文件夹
            root   dist;
            # 找到 html/index.html =>匹配网址 /index.html /index.htm 而不是 /index
            index  index.html index.htm;

            # 解决 history 路由问题
            # $uri 当前请求的 URL 但不包含 query "?" 后的参数
            try_files $uri $uri/ /index.html;
        }

        location ~* \.(js|css)$ {
            proxy_pass http://127.0.0.1:8001;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # location /web1/ {
        # 	  	proxy_pass http://10.6.1.112:8080; #这里加斜杠意味着URL，nginx会把前缀 /web1 替换掉
        # 	}
        # 	# 设置js css和图片代理路径，否则前端访问找不到
        # 	location ~ .*\.(js|css)?$ {
        # 	    expires 12h;
        # 	    proxy_pass http://10.6.1.112:8080;
        # 	}
        # 	location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)?$ {
        # 	    expires 12h;
        # 	    proxy_pass http://10.6.1.112:8080;
        # 	}


        # 替换方案2
        # location /api/ {
        #     rewrite ^/api/(.*)$ /$1 break;	// 去除接口/api前缀
        #     proxy_pass http://10.6.1.112:8080/; #这里加斜杠意味着URL，nginx会把前缀 /api 替换掉
        #     proxy_set_header Accept-Encoding "";
        #     #通过直接替换的方式把输出内容中的URL替换掉
        #     sub_filter '"/' '"/gitlab/'; #把 "/ 替换成 "/gitlab/
        #     sub_filter a.gcnao.com b.com; #把 a.gcnao.com 替换成 b.com
        #     sub_filter_once off; #是否只替换一次
        # }










        #error_page  404              /404.html;
        # 自动匹配 404 页面到 html/404.html
        error_page 404 /404.html;


        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
