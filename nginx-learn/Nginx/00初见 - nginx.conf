
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    # 文件扩展名与文件类型映射表 存放在 mime.types 文件
    include       mime.types;
    # 默认文件类型
    default_type  application/octet-stream;

    # 日志文件自定义输出格式 这个位置相于全局设置
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # 请求日志保存位置
    #access_log  logs/access.log  main;

    # 发送文件
    sendfile        on;
    #tcp_nopush     on;

    # 超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        # 监听的端口和 host 默认 80
        listen       5000;
        server_name  127.0.0.1;

        #charset koi8-r;

        # 单独开启 nginx访问日志放在 logs/host.access.log 下，并且使用 main 格式（还可以自定义格式）
        #access_log  logs/host.access.log  main;

        # 反向代理配置 /api
        location /api/ {
            # proxy_pass 将 /api 反向代理到百度
            # proxy_pass https://www.baidu.com/;
            proxy_pass http://127.0.0.1:3001/;
        }

        #如果没有 location 更明确的匹配访问路径的话，访问请求都会被该 location 处理。
        location / {
            # 指定网页的目录为 Nginx 文件夹的 /html
            root   html;
            # 找到 html/index.html =>匹配网址 /index.html /index.htm 而不是 /index
            index  index.html index.htm;
        }

        #error_page  404              /404.html;
        # 自动匹配 404 页面到 html/404.html
        error_page 404 /404.html;


        # redirect server error pages to the static page /50x.html ，错误码为 500、502、503、504 都会返回 50.html 错误页面。
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
